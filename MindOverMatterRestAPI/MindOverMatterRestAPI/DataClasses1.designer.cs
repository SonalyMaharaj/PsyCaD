#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MindOverMatterRestAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MindOverMatterDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertBookConsultation(BookConsultation instance);
    partial void UpdateBookConsultation(BookConsultation instance);
    partial void DeleteBookConsultation(BookConsultation instance);
    partial void InsertDiary(Diary instance);
    partial void UpdateDiary(Diary instance);
    partial void DeleteDiary(Diary instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertPrescribeExercise(PrescribeExercise instance);
    partial void UpdatePrescribeExercise(PrescribeExercise instance);
    partial void DeletePrescribeExercise(PrescribeExercise instance);
    partial void InsertPsychologist(Psychologist instance);
    partial void UpdatePsychologist(Psychologist instance);
    partial void DeletePsychologist(Psychologist instance);
    partial void InsertSessionNote(SessionNote instance);
    partial void UpdateSessionNote(SessionNote instance);
    partial void DeleteSessionNote(SessionNote instance);
    partial void InsertUnAvailableDateAndTime(UnAvailableDateAndTime instance);
    partial void UpdateUnAvailableDateAndTime(UnAvailableDateAndTime instance);
    partial void DeleteUnAvailableDateAndTime(UnAvailableDateAndTime instance);
    partial void InsertStudentPsychologistLink(StudentPsychologistLink instance);
    partial void UpdateStudentPsychologistLink(StudentPsychologistLink instance);
    partial void DeleteStudentPsychologistLink(StudentPsychologistLink instance);
    partial void InsertExercise(Exercise instance);
    partial void UpdateExercise(Exercise instance);
    partial void DeleteExercise(Exercise instance);
    partial void InsertMood(Mood instance);
    partial void UpdateMood(Mood instance);
    partial void DeleteMood(Mood instance);
    partial void InsertCallLog(CallLog instance);
    partial void UpdateCallLog(CallLog instance);
    partial void DeleteCallLog(CallLog instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertMedicineTracker(MedicineTracker instance);
    partial void UpdateMedicineTracker(MedicineTracker instance);
    partial void DeleteMedicineTracker(MedicineTracker instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MindOverMatterDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<BookConsultation> BookConsultations
		{
			get
			{
				return this.GetTable<BookConsultation>();
			}
		}
		
		public System.Data.Linq.Table<Diary> Diaries
		{
			get
			{
				return this.GetTable<Diary>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<PrescribeExercise> PrescribeExercises
		{
			get
			{
				return this.GetTable<PrescribeExercise>();
			}
		}
		
		public System.Data.Linq.Table<Psychologist> Psychologists
		{
			get
			{
				return this.GetTable<Psychologist>();
			}
		}
		
		public System.Data.Linq.Table<SessionNote> SessionNotes
		{
			get
			{
				return this.GetTable<SessionNote>();
			}
		}
		
		public System.Data.Linq.Table<UnAvailableDateAndTime> UnAvailableDateAndTimes
		{
			get
			{
				return this.GetTable<UnAvailableDateAndTime>();
			}
		}
		
		public System.Data.Linq.Table<StudentPsychologistLink> StudentPsychologistLinks
		{
			get
			{
				return this.GetTable<StudentPsychologistLink>();
			}
		}
		
		public System.Data.Linq.Table<Exercise> Exercises
		{
			get
			{
				return this.GetTable<Exercise>();
			}
		}
		
		public System.Data.Linq.Table<Mood> Moods
		{
			get
			{
				return this.GetTable<Mood>();
			}
		}
		
		public System.Data.Linq.Table<CallLog> CallLogs
		{
			get
			{
				return this.GetTable<CallLog>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<MedicineTracker> MedicineTrackers
		{
			get
			{
				return this.GetTable<MedicineTracker>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminId;
		
		private string _AdminName;
		
		private string _AdminSurname;
		
		private string _AdminEmail;
		
		private string _AdminPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnAdminSurnameChanging(string value);
    partial void OnAdminSurnameChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnAdminPasswordChanging(string value);
    partial void OnAdminPasswordChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this.OnAdminNameChanging(value);
					this.SendPropertyChanging();
					this._AdminName = value;
					this.SendPropertyChanged("AdminName");
					this.OnAdminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminSurname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AdminSurname
		{
			get
			{
				return this._AdminSurname;
			}
			set
			{
				if ((this._AdminSurname != value))
				{
					this.OnAdminSurnameChanging(value);
					this.SendPropertyChanging();
					this._AdminSurname = value;
					this.SendPropertyChanged("AdminSurname");
					this.OnAdminSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string AdminEmail
		{
			get
			{
				return this._AdminEmail;
			}
			set
			{
				if ((this._AdminEmail != value))
				{
					this.OnAdminEmailChanging(value);
					this.SendPropertyChanging();
					this._AdminEmail = value;
					this.SendPropertyChanged("AdminEmail");
					this.OnAdminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPassword", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string AdminPassword
		{
			get
			{
				return this._AdminPassword;
			}
			set
			{
				if ((this._AdminPassword != value))
				{
					this.OnAdminPasswordChanging(value);
					this.SendPropertyChanging();
					this._AdminPassword = value;
					this.SendPropertyChanged("AdminPassword");
					this.OnAdminPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookConsultation")]
	public partial class BookConsultation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookNumber;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private string _BookTime;
		
		private System.Nullable<int> _StudentNumber;
		
		private System.Nullable<int> _PsychologistId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookNumberChanging(int value);
    partial void OnBookNumberChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    partial void OnBookTimeChanging(string value);
    partial void OnBookTimeChanged();
    partial void OnStudentNumberChanging(System.Nullable<int> value);
    partial void OnStudentNumberChanged();
    partial void OnPsychologistIdChanging(System.Nullable<int> value);
    partial void OnPsychologistIdChanged();
    #endregion
		
		public BookConsultation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookNumber
		{
			get
			{
				return this._BookNumber;
			}
			set
			{
				if ((this._BookNumber != value))
				{
					this.OnBookNumberChanging(value);
					this.SendPropertyChanging();
					this._BookNumber = value;
					this.SendPropertyChanged("BookNumber");
					this.OnBookNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTime", DbType="VarChar(20)")]
		public string BookTime
		{
			get
			{
				return this._BookTime;
			}
			set
			{
				if ((this._BookTime != value))
				{
					this.OnBookTimeChanging(value);
					this.SendPropertyChanging();
					this._BookTime = value;
					this.SendPropertyChanged("BookTime");
					this.OnBookTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int")]
		public System.Nullable<int> StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int")]
		public System.Nullable<int> PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diary")]
	public partial class Diary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiaryId;
		
		private System.Nullable<System.DateTime> _DiaryDate;
		
		private string _DiaryTitle;
		
		private string _DiaryDescription;
		
		private string _FlaggedWords;
		
		private System.Nullable<int> _StudentNumber;
		
		private System.Nullable<int> _IsFlagged;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiaryIdChanging(int value);
    partial void OnDiaryIdChanged();
    partial void OnDiaryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiaryDateChanged();
    partial void OnDiaryTitleChanging(string value);
    partial void OnDiaryTitleChanged();
    partial void OnDiaryDescriptionChanging(string value);
    partial void OnDiaryDescriptionChanged();
    partial void OnFlaggedWordsChanging(string value);
    partial void OnFlaggedWordsChanged();
    partial void OnStudentNumberChanging(System.Nullable<int> value);
    partial void OnStudentNumberChanged();
    partial void OnIsFlaggedChanging(System.Nullable<int> value);
    partial void OnIsFlaggedChanged();
    #endregion
		
		public Diary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiaryId
		{
			get
			{
				return this._DiaryId;
			}
			set
			{
				if ((this._DiaryId != value))
				{
					this.OnDiaryIdChanging(value);
					this.SendPropertyChanging();
					this._DiaryId = value;
					this.SendPropertyChanged("DiaryId");
					this.OnDiaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaryDate", DbType="Date")]
		public System.Nullable<System.DateTime> DiaryDate
		{
			get
			{
				return this._DiaryDate;
			}
			set
			{
				if ((this._DiaryDate != value))
				{
					this.OnDiaryDateChanging(value);
					this.SendPropertyChanging();
					this._DiaryDate = value;
					this.SendPropertyChanged("DiaryDate");
					this.OnDiaryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaryTitle", DbType="VarChar(100)")]
		public string DiaryTitle
		{
			get
			{
				return this._DiaryTitle;
			}
			set
			{
				if ((this._DiaryTitle != value))
				{
					this.OnDiaryTitleChanging(value);
					this.SendPropertyChanging();
					this._DiaryTitle = value;
					this.SendPropertyChanged("DiaryTitle");
					this.OnDiaryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaryDescription", DbType="VarChar(MAX)")]
		public string DiaryDescription
		{
			get
			{
				return this._DiaryDescription;
			}
			set
			{
				if ((this._DiaryDescription != value))
				{
					this.OnDiaryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DiaryDescription = value;
					this.SendPropertyChanged("DiaryDescription");
					this.OnDiaryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlaggedWords", DbType="VarChar(MAX)")]
		public string FlaggedWords
		{
			get
			{
				return this._FlaggedWords;
			}
			set
			{
				if ((this._FlaggedWords != value))
				{
					this.OnFlaggedWordsChanging(value);
					this.SendPropertyChanging();
					this._FlaggedWords = value;
					this.SendPropertyChanged("FlaggedWords");
					this.OnFlaggedWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int")]
		public System.Nullable<int> StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlagged", DbType="Int")]
		public System.Nullable<int> IsFlagged
		{
			get
			{
				return this._IsFlagged;
			}
			set
			{
				if ((this._IsFlagged != value))
				{
					this.OnIsFlaggedChanging(value);
					this.SendPropertyChanging();
					this._IsFlagged = value;
					this.SendPropertyChanged("IsFlagged");
					this.OnIsFlaggedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StudentNumber;
		
		private System.Nullable<int> _PsychologistId;
		
		private System.DateTime _DateOfNotification;
		
		private string _Description;
		
		private string _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudentNumberChanging(System.Nullable<int> value);
    partial void OnStudentNumberChanged();
    partial void OnPsychologistIdChanging(System.Nullable<int> value);
    partial void OnPsychologistIdChanged();
    partial void OnDateOfNotificationChanging(System.DateTime value);
    partial void OnDateOfNotificationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(string value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int")]
		public System.Nullable<int> StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int")]
		public System.Nullable<int> PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfNotification", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfNotification
		{
			get
			{
				return this._DateOfNotification;
			}
			set
			{
				if ((this._DateOfNotification != value))
				{
					this.OnDateOfNotificationChanging(value);
					this.SendPropertyChanging();
					this._DateOfNotification = value;
					this.SendPropertyChanged("DateOfNotification");
					this.OnDateOfNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrescribeExercise")]
	public partial class PrescribeExercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PsychologistId;
		
		private int _ExerciseId;
		
		private System.Nullable<int> _StudentNumber;
		
		private System.DateTime _DatePrescribed;
		
		private System.Nullable<int> _IsLatestCompleted;
		
		private System.Nullable<int> _NumCompletion;
		
		private System.Nullable<int> _IsPrescribed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPsychologistIdChanging(int value);
    partial void OnPsychologistIdChanged();
    partial void OnExerciseIdChanging(int value);
    partial void OnExerciseIdChanged();
    partial void OnStudentNumberChanging(System.Nullable<int> value);
    partial void OnStudentNumberChanged();
    partial void OnDatePrescribedChanging(System.DateTime value);
    partial void OnDatePrescribedChanged();
    partial void OnIsLatestCompletedChanging(System.Nullable<int> value);
    partial void OnIsLatestCompletedChanged();
    partial void OnNumCompletionChanging(System.Nullable<int> value);
    partial void OnNumCompletionChanged();
    partial void OnIsPrescribedChanging(System.Nullable<int> value);
    partial void OnIsPrescribedChanged();
    #endregion
		
		public PrescribeExercise()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int NOT NULL")]
		public int PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseId", DbType="Int NOT NULL")]
		public int ExerciseId
		{
			get
			{
				return this._ExerciseId;
			}
			set
			{
				if ((this._ExerciseId != value))
				{
					this.OnExerciseIdChanging(value);
					this.SendPropertyChanging();
					this._ExerciseId = value;
					this.SendPropertyChanged("ExerciseId");
					this.OnExerciseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int")]
		public System.Nullable<int> StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePrescribed", DbType="Date NOT NULL")]
		public System.DateTime DatePrescribed
		{
			get
			{
				return this._DatePrescribed;
			}
			set
			{
				if ((this._DatePrescribed != value))
				{
					this.OnDatePrescribedChanging(value);
					this.SendPropertyChanging();
					this._DatePrescribed = value;
					this.SendPropertyChanged("DatePrescribed");
					this.OnDatePrescribedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLatestCompleted", DbType="Int")]
		public System.Nullable<int> IsLatestCompleted
		{
			get
			{
				return this._IsLatestCompleted;
			}
			set
			{
				if ((this._IsLatestCompleted != value))
				{
					this.OnIsLatestCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsLatestCompleted = value;
					this.SendPropertyChanged("IsLatestCompleted");
					this.OnIsLatestCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompletion", DbType="Int")]
		public System.Nullable<int> NumCompletion
		{
			get
			{
				return this._NumCompletion;
			}
			set
			{
				if ((this._NumCompletion != value))
				{
					this.OnNumCompletionChanging(value);
					this.SendPropertyChanging();
					this._NumCompletion = value;
					this.SendPropertyChanged("NumCompletion");
					this.OnNumCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrescribed", DbType="Int")]
		public System.Nullable<int> IsPrescribed
		{
			get
			{
				return this._IsPrescribed;
			}
			set
			{
				if ((this._IsPrescribed != value))
				{
					this.OnIsPrescribedChanging(value);
					this.SendPropertyChanging();
					this._IsPrescribed = value;
					this.SendPropertyChanged("IsPrescribed");
					this.OnIsPrescribedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Psychologist")]
	public partial class Psychologist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PsychologistId;
		
		private string _PsychologistName;
		
		private string _PsychologistSurname;
		
		private string _PsychologistEmail;
		
		private string _PsychologistPassword;
		
		private int _NumStudentsLinked;
		
		private char _IsActive;
		
		private System.Nullable<int> _AdminId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPsychologistIdChanging(int value);
    partial void OnPsychologistIdChanged();
    partial void OnPsychologistNameChanging(string value);
    partial void OnPsychologistNameChanged();
    partial void OnPsychologistSurnameChanging(string value);
    partial void OnPsychologistSurnameChanged();
    partial void OnPsychologistEmailChanging(string value);
    partial void OnPsychologistEmailChanged();
    partial void OnPsychologistPasswordChanging(string value);
    partial void OnPsychologistPasswordChanged();
    partial void OnNumStudentsLinkedChanging(int value);
    partial void OnNumStudentsLinkedChanged();
    partial void OnIsActiveChanging(char value);
    partial void OnIsActiveChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    #endregion
		
		public Psychologist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PsychologistName
		{
			get
			{
				return this._PsychologistName;
			}
			set
			{
				if ((this._PsychologistName != value))
				{
					this.OnPsychologistNameChanging(value);
					this.SendPropertyChanging();
					this._PsychologistName = value;
					this.SendPropertyChanged("PsychologistName");
					this.OnPsychologistNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistSurname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PsychologistSurname
		{
			get
			{
				return this._PsychologistSurname;
			}
			set
			{
				if ((this._PsychologistSurname != value))
				{
					this.OnPsychologistSurnameChanging(value);
					this.SendPropertyChanging();
					this._PsychologistSurname = value;
					this.SendPropertyChanged("PsychologistSurname");
					this.OnPsychologistSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistEmail", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string PsychologistEmail
		{
			get
			{
				return this._PsychologistEmail;
			}
			set
			{
				if ((this._PsychologistEmail != value))
				{
					this.OnPsychologistEmailChanging(value);
					this.SendPropertyChanging();
					this._PsychologistEmail = value;
					this.SendPropertyChanged("PsychologistEmail");
					this.OnPsychologistEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistPassword", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string PsychologistPassword
		{
			get
			{
				return this._PsychologistPassword;
			}
			set
			{
				if ((this._PsychologistPassword != value))
				{
					this.OnPsychologistPasswordChanging(value);
					this.SendPropertyChanging();
					this._PsychologistPassword = value;
					this.SendPropertyChanged("PsychologistPassword");
					this.OnPsychologistPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumStudentsLinked", DbType="Int NOT NULL")]
		public int NumStudentsLinked
		{
			get
			{
				return this._NumStudentsLinked;
			}
			set
			{
				if ((this._NumStudentsLinked != value))
				{
					this.OnNumStudentsLinkedChanging(value);
					this.SendPropertyChanging();
					this._NumStudentsLinked = value;
					this.SendPropertyChanged("NumStudentsLinked");
					this.OnNumStudentsLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Char(1) NOT NULL")]
		public char IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
		public System.Nullable<int> AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SessionNote")]
	public partial class SessionNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SessionId;
		
		private System.DateTime _SessionDate;
		
		private string _SessionDescription;
		
		private System.Nullable<int> _SessionRating;
		
		private int _StudentNumber;
		
		private int _PsychologistId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnSessionDateChanging(System.DateTime value);
    partial void OnSessionDateChanged();
    partial void OnSessionDescriptionChanging(string value);
    partial void OnSessionDescriptionChanged();
    partial void OnSessionRatingChanging(System.Nullable<int> value);
    partial void OnSessionRatingChanged();
    partial void OnStudentNumberChanging(int value);
    partial void OnStudentNumberChanged();
    partial void OnPsychologistIdChanging(int value);
    partial void OnPsychologistIdChanged();
    #endregion
		
		public SessionNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionDate", DbType="Date NOT NULL")]
		public System.DateTime SessionDate
		{
			get
			{
				return this._SessionDate;
			}
			set
			{
				if ((this._SessionDate != value))
				{
					this.OnSessionDateChanging(value);
					this.SendPropertyChanging();
					this._SessionDate = value;
					this.SendPropertyChanged("SessionDate");
					this.OnSessionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SessionDescription
		{
			get
			{
				return this._SessionDescription;
			}
			set
			{
				if ((this._SessionDescription != value))
				{
					this.OnSessionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SessionDescription = value;
					this.SendPropertyChanged("SessionDescription");
					this.OnSessionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionRating", DbType="Int")]
		public System.Nullable<int> SessionRating
		{
			get
			{
				return this._SessionRating;
			}
			set
			{
				if ((this._SessionRating != value))
				{
					this.OnSessionRatingChanging(value);
					this.SendPropertyChanging();
					this._SessionRating = value;
					this.SendPropertyChanged("SessionRating");
					this.OnSessionRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int NOT NULL")]
		public int StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int NOT NULL")]
		public int PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnAvailableDateAndTime")]
	public partial class UnAvailableDateAndTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PsychologistId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Time;
		
		private System.Nullable<int> _IsAvailable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPsychologistIdChanging(int value);
    partial void OnPsychologistIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnIsAvailableChanging(System.Nullable<int> value);
    partial void OnIsAvailableChanged();
    #endregion
		
		public UnAvailableDateAndTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int NOT NULL")]
		public int PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(20)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Int")]
		public System.Nullable<int> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPsychologistLink")]
	public partial class StudentPsychologistLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkID;
		
		private System.Nullable<int> _PsychologistId;
		
		private System.Nullable<int> _StudentNumber;
		
		private System.Nullable<int> _IsLinked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnPsychologistIdChanging(System.Nullable<int> value);
    partial void OnPsychologistIdChanged();
    partial void OnStudentNumberChanging(System.Nullable<int> value);
    partial void OnStudentNumberChanged();
    partial void OnIsLinkedChanging(System.Nullable<int> value);
    partial void OnIsLinkedChanged();
    #endregion
		
		public StudentPsychologistLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologistId", DbType="Int")]
		public System.Nullable<int> PsychologistId
		{
			get
			{
				return this._PsychologistId;
			}
			set
			{
				if ((this._PsychologistId != value))
				{
					this.OnPsychologistIdChanging(value);
					this.SendPropertyChanging();
					this._PsychologistId = value;
					this.SendPropertyChanged("PsychologistId");
					this.OnPsychologistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int")]
		public System.Nullable<int> StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLinked", DbType="Int")]
		public System.Nullable<int> IsLinked
		{
			get
			{
				return this._IsLinked;
			}
			set
			{
				if ((this._IsLinked != value))
				{
					this.OnIsLinkedChanging(value);
					this.SendPropertyChanging();
					this._IsLinked = value;
					this.SendPropertyChanged("IsLinked");
					this.OnIsLinkedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exercise")]
	public partial class Exercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExerciseId;
		
		private string _ExerciseName;
		
		private string _ExerciseDescription;
		
		private string _MediaPath;
		
		private System.Nullable<char> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerciseIdChanging(int value);
    partial void OnExerciseIdChanged();
    partial void OnExerciseNameChanging(string value);
    partial void OnExerciseNameChanged();
    partial void OnExerciseDescriptionChanging(string value);
    partial void OnExerciseDescriptionChanged();
    partial void OnMediaPathChanging(string value);
    partial void OnMediaPathChanged();
    partial void OnIsActiveChanging(System.Nullable<char> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Exercise()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExerciseId
		{
			get
			{
				return this._ExerciseId;
			}
			set
			{
				if ((this._ExerciseId != value))
				{
					this.OnExerciseIdChanging(value);
					this.SendPropertyChanging();
					this._ExerciseId = value;
					this.SendPropertyChanged("ExerciseId");
					this.OnExerciseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExerciseName
		{
			get
			{
				return this._ExerciseName;
			}
			set
			{
				if ((this._ExerciseName != value))
				{
					this.OnExerciseNameChanging(value);
					this.SendPropertyChanging();
					this._ExerciseName = value;
					this.SendPropertyChanged("ExerciseName");
					this.OnExerciseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExerciseDescription
		{
			get
			{
				return this._ExerciseDescription;
			}
			set
			{
				if ((this._ExerciseDescription != value))
				{
					this.OnExerciseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExerciseDescription = value;
					this.SendPropertyChanged("ExerciseDescription");
					this.OnExerciseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaPath", DbType="VarChar(MAX)")]
		public string MediaPath
		{
			get
			{
				return this._MediaPath;
			}
			set
			{
				if ((this._MediaPath != value))
				{
					this.OnMediaPathChanging(value);
					this.SendPropertyChanging();
					this._MediaPath = value;
					this.SendPropertyChanged("MediaPath");
					this.OnMediaPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Char(1)")]
		public System.Nullable<char> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mood")]
	public partial class Mood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MoodId;
		
		private System.DateTime _MoodDate;
		
		private string _MoodTime;
		
		private string _MoodEmotion;
		
		private System.Nullable<int> _MoodIntegerImage;
		
		private int _StudentNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoodIdChanging(int value);
    partial void OnMoodIdChanged();
    partial void OnMoodDateChanging(System.DateTime value);
    partial void OnMoodDateChanged();
    partial void OnMoodTimeChanging(string value);
    partial void OnMoodTimeChanged();
    partial void OnMoodEmotionChanging(string value);
    partial void OnMoodEmotionChanged();
    partial void OnMoodIntegerImageChanging(System.Nullable<int> value);
    partial void OnMoodIntegerImageChanged();
    partial void OnStudentNumberChanging(int value);
    partial void OnStudentNumberChanged();
    #endregion
		
		public Mood()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MoodId
		{
			get
			{
				return this._MoodId;
			}
			set
			{
				if ((this._MoodId != value))
				{
					this.OnMoodIdChanging(value);
					this.SendPropertyChanging();
					this._MoodId = value;
					this.SendPropertyChanged("MoodId");
					this.OnMoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodDate", DbType="Date NOT NULL")]
		public System.DateTime MoodDate
		{
			get
			{
				return this._MoodDate;
			}
			set
			{
				if ((this._MoodDate != value))
				{
					this.OnMoodDateChanging(value);
					this.SendPropertyChanging();
					this._MoodDate = value;
					this.SendPropertyChanged("MoodDate");
					this.OnMoodDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodTime", DbType="VarChar(MAX)")]
		public string MoodTime
		{
			get
			{
				return this._MoodTime;
			}
			set
			{
				if ((this._MoodTime != value))
				{
					this.OnMoodTimeChanging(value);
					this.SendPropertyChanging();
					this._MoodTime = value;
					this.SendPropertyChanged("MoodTime");
					this.OnMoodTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodEmotion", DbType="VarChar(MAX)")]
		public string MoodEmotion
		{
			get
			{
				return this._MoodEmotion;
			}
			set
			{
				if ((this._MoodEmotion != value))
				{
					this.OnMoodEmotionChanging(value);
					this.SendPropertyChanging();
					this._MoodEmotion = value;
					this.SendPropertyChanged("MoodEmotion");
					this.OnMoodEmotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodIntegerImage", DbType="Int")]
		public System.Nullable<int> MoodIntegerImage
		{
			get
			{
				return this._MoodIntegerImage;
			}
			set
			{
				if ((this._MoodIntegerImage != value))
				{
					this.OnMoodIntegerImageChanging(value);
					this.SendPropertyChanging();
					this._MoodIntegerImage = value;
					this.SendPropertyChanged("MoodIntegerImage");
					this.OnMoodIntegerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int NOT NULL")]
		public int StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallLog")]
	public partial class CallLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CallId;
		
		private string _TelHolder;
		
		private string _TelNumber;
		
		private System.DateTime _CallDate;
		
		private string _CallTime;
		
		private int _StudentNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCallIdChanging(int value);
    partial void OnCallIdChanged();
    partial void OnTelHolderChanging(string value);
    partial void OnTelHolderChanged();
    partial void OnTelNumberChanging(string value);
    partial void OnTelNumberChanged();
    partial void OnCallDateChanging(System.DateTime value);
    partial void OnCallDateChanged();
    partial void OnCallTimeChanging(string value);
    partial void OnCallTimeChanged();
    partial void OnStudentNumberChanging(int value);
    partial void OnStudentNumberChanged();
    #endregion
		
		public CallLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CallId
		{
			get
			{
				return this._CallId;
			}
			set
			{
				if ((this._CallId != value))
				{
					this.OnCallIdChanging(value);
					this.SendPropertyChanging();
					this._CallId = value;
					this.SendPropertyChanged("CallId");
					this.OnCallIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelHolder", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TelHolder
		{
			get
			{
				return this._TelHolder;
			}
			set
			{
				if ((this._TelHolder != value))
				{
					this.OnTelHolderChanging(value);
					this.SendPropertyChanging();
					this._TelHolder = value;
					this.SendPropertyChanged("TelHolder");
					this.OnTelHolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this.OnTelNumberChanging(value);
					this.SendPropertyChanging();
					this._TelNumber = value;
					this.SendPropertyChanged("TelNumber");
					this.OnTelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="DateTime NOT NULL")]
		public System.DateTime CallDate
		{
			get
			{
				return this._CallDate;
			}
			set
			{
				if ((this._CallDate != value))
				{
					this.OnCallDateChanging(value);
					this.SendPropertyChanging();
					this._CallDate = value;
					this.SendPropertyChanged("CallDate");
					this.OnCallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallTime", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CallTime
		{
			get
			{
				return this._CallTime;
			}
			set
			{
				if ((this._CallTime != value))
				{
					this.OnCallTimeChanging(value);
					this.SendPropertyChanging();
					this._CallTime = value;
					this.SendPropertyChanged("CallTime");
					this.OnCallTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int NOT NULL")]
		public int StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentNumber;
		
		private string _StudentName;
		
		private string _StudentSurname;
		
		private string _StudentEmail;
		
		private string _StudentPassword;
		
		private System.Nullable<char> _StudentGender;
		
		private System.Nullable<System.DateTime> _StudentDOB;
		
		private string _StudentQualification;
		
		private string _Campus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentNumberChanging(int value);
    partial void OnStudentNumberChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentSurnameChanging(string value);
    partial void OnStudentSurnameChanged();
    partial void OnStudentEmailChanging(string value);
    partial void OnStudentEmailChanged();
    partial void OnStudentPasswordChanging(string value);
    partial void OnStudentPasswordChanged();
    partial void OnStudentGenderChanging(System.Nullable<char> value);
    partial void OnStudentGenderChanged();
    partial void OnStudentDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnStudentDOBChanged();
    partial void OnStudentQualificationChanging(string value);
    partial void OnStudentQualificationChanged();
    partial void OnCampusChanging(string value);
    partial void OnCampusChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSurname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string StudentSurname
		{
			get
			{
				return this._StudentSurname;
			}
			set
			{
				if ((this._StudentSurname != value))
				{
					this.OnStudentSurnameChanging(value);
					this.SendPropertyChanging();
					this._StudentSurname = value;
					this.SendPropertyChanged("StudentSurname");
					this.OnStudentSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentEmail", DbType="VarChar(150)")]
		public string StudentEmail
		{
			get
			{
				return this._StudentEmail;
			}
			set
			{
				if ((this._StudentEmail != value))
				{
					this.OnStudentEmailChanging(value);
					this.SendPropertyChanging();
					this._StudentEmail = value;
					this.SendPropertyChanged("StudentEmail");
					this.OnStudentEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPassword", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string StudentPassword
		{
			get
			{
				return this._StudentPassword;
			}
			set
			{
				if ((this._StudentPassword != value))
				{
					this.OnStudentPasswordChanging(value);
					this.SendPropertyChanging();
					this._StudentPassword = value;
					this.SendPropertyChanged("StudentPassword");
					this.OnStudentPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGender", DbType="Char(1)")]
		public System.Nullable<char> StudentGender
		{
			get
			{
				return this._StudentGender;
			}
			set
			{
				if ((this._StudentGender != value))
				{
					this.OnStudentGenderChanging(value);
					this.SendPropertyChanging();
					this._StudentGender = value;
					this.SendPropertyChanged("StudentGender");
					this.OnStudentGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDOB", DbType="Date")]
		public System.Nullable<System.DateTime> StudentDOB
		{
			get
			{
				return this._StudentDOB;
			}
			set
			{
				if ((this._StudentDOB != value))
				{
					this.OnStudentDOBChanging(value);
					this.SendPropertyChanging();
					this._StudentDOB = value;
					this.SendPropertyChanged("StudentDOB");
					this.OnStudentDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentQualification", DbType="VarChar(150)")]
		public string StudentQualification
		{
			get
			{
				return this._StudentQualification;
			}
			set
			{
				if ((this._StudentQualification != value))
				{
					this.OnStudentQualificationChanging(value);
					this.SendPropertyChanging();
					this._StudentQualification = value;
					this.SendPropertyChanged("StudentQualification");
					this.OnStudentQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campus", DbType="VarChar(150)")]
		public string Campus
		{
			get
			{
				return this._Campus;
			}
			set
			{
				if ((this._Campus != value))
				{
					this.OnCampusChanging(value);
					this.SendPropertyChanging();
					this._Campus = value;
					this.SendPropertyChanged("Campus");
					this.OnCampusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineTracker")]
	public partial class MedicineTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _NameOfMedication;
		
		private string _Category;
		
		private int _StudentNumber;
		
		private string _NameOfDoctor;
		
		private System.Nullable<int> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameOfMedicationChanging(string value);
    partial void OnNameOfMedicationChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStudentNumberChanging(int value);
    partial void OnStudentNumberChanged();
    partial void OnNameOfDoctorChanging(string value);
    partial void OnNameOfDoctorChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MedicineTracker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfMedication", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameOfMedication
		{
			get
			{
				return this._NameOfMedication;
			}
			set
			{
				if ((this._NameOfMedication != value))
				{
					this.OnNameOfMedicationChanging(value);
					this.SendPropertyChanging();
					this._NameOfMedication = value;
					this.SendPropertyChanged("NameOfMedication");
					this.OnNameOfMedicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNumber", DbType="Int NOT NULL")]
		public int StudentNumber
		{
			get
			{
				return this._StudentNumber;
			}
			set
			{
				if ((this._StudentNumber != value))
				{
					this.OnStudentNumberChanging(value);
					this.SendPropertyChanging();
					this._StudentNumber = value;
					this.SendPropertyChanged("StudentNumber");
					this.OnStudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfDoctor", DbType="VarChar(50)")]
		public string NameOfDoctor
		{
			get
			{
				return this._NameOfDoctor;
			}
			set
			{
				if ((this._NameOfDoctor != value))
				{
					this.OnNameOfDoctorChanging(value);
					this.SendPropertyChanging();
					this._NameOfDoctor = value;
					this.SendPropertyChanged("NameOfDoctor");
					this.OnNameOfDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
