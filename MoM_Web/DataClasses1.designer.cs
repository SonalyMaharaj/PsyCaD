#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoM_Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MoM_V1_db")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertCall(Call instance);
    partial void UpdateCall(Call instance);
    partial void DeleteCall(Call instance);
    partial void InsertDiary(Diary instance);
    partial void UpdateDiary(Diary instance);
    partial void DeleteDiary(Diary instance);
    partial void InsertMood(Mood instance);
    partial void UpdateMood(Mood instance);
    partial void DeleteMood(Mood instance);
    partial void InsertPsychologist(Psychologist instance);
    partial void UpdatePsychologist(Psychologist instance);
    partial void DeletePsychologist(Psychologist instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MoM_V1_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Call> Calls
		{
			get
			{
				return this.GetTable<Call>();
			}
		}
		
		public System.Data.Linq.Table<Diary> Diaries
		{
			get
			{
				return this.GetTable<Diary>();
			}
		}
		
		public System.Data.Linq.Table<Mood> Moods
		{
			get
			{
				return this.GetTable<Mood>();
			}
		}
		
		public System.Data.Linq.Table<Psychologist> Psychologists
		{
			get
			{
				return this.GetTable<Psychologist>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Admin_Id;
		
		private string _Admin_Name;
		
		private string _Admin_Surname;
		
		private string _Admin_Email;
		
		private string _Admin_Password;
		
		private System.Nullable<int> _Psychologist_Id;
		
		private EntityRef<Psychologist> _Psychologist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmin_IdChanging(int value);
    partial void OnAdmin_IdChanged();
    partial void OnAdmin_NameChanging(string value);
    partial void OnAdmin_NameChanged();
    partial void OnAdmin_SurnameChanging(string value);
    partial void OnAdmin_SurnameChanged();
    partial void OnAdmin_EmailChanging(string value);
    partial void OnAdmin_EmailChanged();
    partial void OnAdmin_PasswordChanging(string value);
    partial void OnAdmin_PasswordChanged();
    partial void OnPsychologist_IdChanging(System.Nullable<int> value);
    partial void OnPsychologist_IdChanged();
    #endregion
		
		public Admin()
		{
			this._Psychologist = default(EntityRef<Psychologist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Admin_Id
		{
			get
			{
				return this._Admin_Id;
			}
			set
			{
				if ((this._Admin_Id != value))
				{
					this.OnAdmin_IdChanging(value);
					this.SendPropertyChanging();
					this._Admin_Id = value;
					this.SendPropertyChanged("Admin_Id");
					this.OnAdmin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Admin_Name
		{
			get
			{
				return this._Admin_Name;
			}
			set
			{
				if ((this._Admin_Name != value))
				{
					this.OnAdmin_NameChanging(value);
					this.SendPropertyChanging();
					this._Admin_Name = value;
					this.SendPropertyChanged("Admin_Name");
					this.OnAdmin_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Admin_Surname
		{
			get
			{
				return this._Admin_Surname;
			}
			set
			{
				if ((this._Admin_Surname != value))
				{
					this.OnAdmin_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Admin_Surname = value;
					this.SendPropertyChanged("Admin_Surname");
					this.OnAdmin_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Admin_Email
		{
			get
			{
				return this._Admin_Email;
			}
			set
			{
				if ((this._Admin_Email != value))
				{
					this.OnAdmin_EmailChanging(value);
					this.SendPropertyChanging();
					this._Admin_Email = value;
					this.SendPropertyChanged("Admin_Email");
					this.OnAdmin_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Password", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Admin_Password
		{
			get
			{
				return this._Admin_Password;
			}
			set
			{
				if ((this._Admin_Password != value))
				{
					this.OnAdmin_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Admin_Password = value;
					this.SendPropertyChanged("Admin_Password");
					this.OnAdmin_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Id", DbType="Int")]
		public System.Nullable<int> Psychologist_Id
		{
			get
			{
				return this._Psychologist_Id;
			}
			set
			{
				if ((this._Psychologist_Id != value))
				{
					if (this._Psychologist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPsychologist_IdChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Id = value;
					this.SendPropertyChanged("Psychologist_Id");
					this.OnPsychologist_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Psychologist_Admin", Storage="_Psychologist", ThisKey="Psychologist_Id", OtherKey="Psychologist_Id", IsForeignKey=true)]
		public Psychologist Psychologist
		{
			get
			{
				return this._Psychologist.Entity;
			}
			set
			{
				Psychologist previousValue = this._Psychologist.Entity;
				if (((previousValue != value) 
							|| (this._Psychologist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Psychologist.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Psychologist.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._Psychologist_Id = value.Psychologist_Id;
					}
					else
					{
						this._Psychologist_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Psychologist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Student_Id;
		
		private string _Student_Name;
		
		private string _Student_Surname;
		
		private string _Student_Email;
		
		private string _Student_Password;
		
		private EntitySet<Call> _Calls;
		
		private EntitySet<Diary> _Diaries;
		
		private EntitySet<Mood> _Moods;
		
		private EntitySet<Psychologist> _Psychologists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    partial void OnStudent_NameChanging(string value);
    partial void OnStudent_NameChanged();
    partial void OnStudent_SurnameChanging(string value);
    partial void OnStudent_SurnameChanged();
    partial void OnStudent_EmailChanging(string value);
    partial void OnStudent_EmailChanged();
    partial void OnStudent_PasswordChanging(string value);
    partial void OnStudent_PasswordChanged();
    #endregion
		
		public Student()
		{
			this._Calls = new EntitySet<Call>(new Action<Call>(this.attach_Calls), new Action<Call>(this.detach_Calls));
			this._Diaries = new EntitySet<Diary>(new Action<Diary>(this.attach_Diaries), new Action<Diary>(this.detach_Diaries));
			this._Moods = new EntitySet<Mood>(new Action<Mood>(this.attach_Moods), new Action<Mood>(this.detach_Moods));
			this._Psychologists = new EntitySet<Psychologist>(new Action<Psychologist>(this.attach_Psychologists), new Action<Psychologist>(this.detach_Psychologists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this.OnStudent_NameChanging(value);
					this.SendPropertyChanging();
					this._Student_Name = value;
					this.SendPropertyChanged("Student_Name");
					this.OnStudent_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Student_Surname
		{
			get
			{
				return this._Student_Surname;
			}
			set
			{
				if ((this._Student_Surname != value))
				{
					this.OnStudent_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Student_Surname = value;
					this.SendPropertyChanged("Student_Surname");
					this.OnStudent_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this.OnStudent_EmailChanging(value);
					this.SendPropertyChanging();
					this._Student_Email = value;
					this.SendPropertyChanged("Student_Email");
					this.OnStudent_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Password", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Student_Password
		{
			get
			{
				return this._Student_Password;
			}
			set
			{
				if ((this._Student_Password != value))
				{
					this.OnStudent_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Student_Password = value;
					this.SendPropertyChanged("Student_Password");
					this.OnStudent_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Call", Storage="_Calls", ThisKey="Student_Id", OtherKey="Student_Id")]
		public EntitySet<Call> Calls
		{
			get
			{
				return this._Calls;
			}
			set
			{
				this._Calls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Diary", Storage="_Diaries", ThisKey="Student_Id", OtherKey="Student_Id")]
		public EntitySet<Diary> Diaries
		{
			get
			{
				return this._Diaries;
			}
			set
			{
				this._Diaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Mood", Storage="_Moods", ThisKey="Student_Id", OtherKey="Student_Id")]
		public EntitySet<Mood> Moods
		{
			get
			{
				return this._Moods;
			}
			set
			{
				this._Moods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Psychologist", Storage="_Psychologists", ThisKey="Student_Id", OtherKey="Student_Id")]
		public EntitySet<Psychologist> Psychologists
		{
			get
			{
				return this._Psychologists;
			}
			set
			{
				this._Psychologists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Diaries(Diary entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Diaries(Diary entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Moods(Mood entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Moods(Mood entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Psychologists(Psychologist entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Psychologists(Psychologist entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Call")]
	public partial class Call : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Call_Id;
		
		private string _Call_Name;
		
		private System.DateTime _Call_Date;
		
		private int _Student_Id;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCall_IdChanging(int value);
    partial void OnCall_IdChanged();
    partial void OnCall_NameChanging(string value);
    partial void OnCall_NameChanged();
    partial void OnCall_DateChanging(System.DateTime value);
    partial void OnCall_DateChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    #endregion
		
		public Call()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Call_Id
		{
			get
			{
				return this._Call_Id;
			}
			set
			{
				if ((this._Call_Id != value))
				{
					this.OnCall_IdChanging(value);
					this.SendPropertyChanging();
					this._Call_Id = value;
					this.SendPropertyChanged("Call_Id");
					this.OnCall_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Call_Name
		{
			get
			{
				return this._Call_Name;
			}
			set
			{
				if ((this._Call_Name != value))
				{
					this.OnCall_NameChanging(value);
					this.SendPropertyChanging();
					this._Call_Name = value;
					this.SendPropertyChanged("Call_Name");
					this.OnCall_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Call_Date
		{
			get
			{
				return this._Call_Date;
			}
			set
			{
				if ((this._Call_Date != value))
				{
					this.OnCall_DateChanging(value);
					this.SendPropertyChanging();
					this._Call_Date = value;
					this.SendPropertyChanged("Call_Date");
					this.OnCall_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Call", Storage="_Student", ThisKey="Student_Id", OtherKey="Student_Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Calls.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Calls.Add(this);
						this._Student_Id = value.Student_Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diary")]
	public partial class Diary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Diary_Id;
		
		private System.Nullable<System.DateTime> _Diary_Date;
		
		private string _Diary_Description;
		
		private string _FlaggedWords;
		
		private int _Student_Id;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiary_IdChanging(int value);
    partial void OnDiary_IdChanged();
    partial void OnDiary_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiary_DateChanged();
    partial void OnDiary_DescriptionChanging(string value);
    partial void OnDiary_DescriptionChanged();
    partial void OnFlaggedWordsChanging(string value);
    partial void OnFlaggedWordsChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    #endregion
		
		public Diary()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diary_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Diary_Id
		{
			get
			{
				return this._Diary_Id;
			}
			set
			{
				if ((this._Diary_Id != value))
				{
					this.OnDiary_IdChanging(value);
					this.SendPropertyChanging();
					this._Diary_Id = value;
					this.SendPropertyChanged("Diary_Id");
					this.OnDiary_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diary_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Diary_Date
		{
			get
			{
				return this._Diary_Date;
			}
			set
			{
				if ((this._Diary_Date != value))
				{
					this.OnDiary_DateChanging(value);
					this.SendPropertyChanging();
					this._Diary_Date = value;
					this.SendPropertyChanged("Diary_Date");
					this.OnDiary_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diary_Description", DbType="VarChar(MAX)")]
		public string Diary_Description
		{
			get
			{
				return this._Diary_Description;
			}
			set
			{
				if ((this._Diary_Description != value))
				{
					this.OnDiary_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Diary_Description = value;
					this.SendPropertyChanged("Diary_Description");
					this.OnDiary_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlaggedWords", DbType="VarChar(MAX)")]
		public string FlaggedWords
		{
			get
			{
				return this._FlaggedWords;
			}
			set
			{
				if ((this._FlaggedWords != value))
				{
					this.OnFlaggedWordsChanging(value);
					this.SendPropertyChanging();
					this._FlaggedWords = value;
					this.SendPropertyChanged("FlaggedWords");
					this.OnFlaggedWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Diary", Storage="_Student", ThisKey="Student_Id", OtherKey="Student_Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Diaries.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Diaries.Add(this);
						this._Student_Id = value.Student_Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mood")]
	public partial class Mood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mood_Id;
		
		private System.DateTime _Mood_DateTime;
		
		private string _Mood_Description;
		
		private int _Student_Id;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMood_IdChanging(int value);
    partial void OnMood_IdChanged();
    partial void OnMood_DateTimeChanging(System.DateTime value);
    partial void OnMood_DateTimeChanged();
    partial void OnMood_DescriptionChanging(string value);
    partial void OnMood_DescriptionChanged();
    partial void OnStudent_IdChanging(int value);
    partial void OnStudent_IdChanged();
    #endregion
		
		public Mood()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mood_Id
		{
			get
			{
				return this._Mood_Id;
			}
			set
			{
				if ((this._Mood_Id != value))
				{
					this.OnMood_IdChanging(value);
					this.SendPropertyChanging();
					this._Mood_Id = value;
					this.SendPropertyChanged("Mood_Id");
					this.OnMood_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime Mood_DateTime
		{
			get
			{
				return this._Mood_DateTime;
			}
			set
			{
				if ((this._Mood_DateTime != value))
				{
					this.OnMood_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Mood_DateTime = value;
					this.SendPropertyChanged("Mood_DateTime");
					this.OnMood_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Mood_Description
		{
			get
			{
				return this._Mood_Description;
			}
			set
			{
				if ((this._Mood_Description != value))
				{
					this.OnMood_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Mood_Description = value;
					this.SendPropertyChanged("Mood_Description");
					this.OnMood_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int NOT NULL")]
		public int Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Mood", Storage="_Student", ThisKey="Student_Id", OtherKey="Student_Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Moods.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Moods.Add(this);
						this._Student_Id = value.Student_Id;
					}
					else
					{
						this._Student_Id = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Psychologist")]
	public partial class Psychologist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Psychologist_Id;
		
		private string _Psychologist_Name;
		
		private string _Psychologist_Surname;
		
		private string _Psychologist_Email;
		
		private string _Psychologist_Password;
		
		private System.Nullable<int> _Admin_Id;
		
		private System.Nullable<int> _Student_Id;
		
		private EntitySet<Admin> _Admins;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPsychologist_IdChanging(int value);
    partial void OnPsychologist_IdChanged();
    partial void OnPsychologist_NameChanging(string value);
    partial void OnPsychologist_NameChanged();
    partial void OnPsychologist_SurnameChanging(string value);
    partial void OnPsychologist_SurnameChanged();
    partial void OnPsychologist_EmailChanging(string value);
    partial void OnPsychologist_EmailChanged();
    partial void OnPsychologist_PasswordChanging(string value);
    partial void OnPsychologist_PasswordChanged();
    partial void OnAdmin_IdChanging(System.Nullable<int> value);
    partial void OnAdmin_IdChanged();
    partial void OnStudent_IdChanging(System.Nullable<int> value);
    partial void OnStudent_IdChanged();
    #endregion
		
		public Psychologist()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Psychologist_Id
		{
			get
			{
				return this._Psychologist_Id;
			}
			set
			{
				if ((this._Psychologist_Id != value))
				{
					this.OnPsychologist_IdChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Id = value;
					this.SendPropertyChanged("Psychologist_Id");
					this.OnPsychologist_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Psychologist_Name
		{
			get
			{
				return this._Psychologist_Name;
			}
			set
			{
				if ((this._Psychologist_Name != value))
				{
					this.OnPsychologist_NameChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Name = value;
					this.SendPropertyChanged("Psychologist_Name");
					this.OnPsychologist_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Psychologist_Surname
		{
			get
			{
				return this._Psychologist_Surname;
			}
			set
			{
				if ((this._Psychologist_Surname != value))
				{
					this.OnPsychologist_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Surname = value;
					this.SendPropertyChanged("Psychologist_Surname");
					this.OnPsychologist_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Psychologist_Email
		{
			get
			{
				return this._Psychologist_Email;
			}
			set
			{
				if ((this._Psychologist_Email != value))
				{
					this.OnPsychologist_EmailChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Email = value;
					this.SendPropertyChanged("Psychologist_Email");
					this.OnPsychologist_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychologist_Password", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Psychologist_Password
		{
			get
			{
				return this._Psychologist_Password;
			}
			set
			{
				if ((this._Psychologist_Password != value))
				{
					this.OnPsychologist_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Psychologist_Password = value;
					this.SendPropertyChanged("Psychologist_Password");
					this.OnPsychologist_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Id", DbType="Int")]
		public System.Nullable<int> Admin_Id
		{
			get
			{
				return this._Admin_Id;
			}
			set
			{
				if ((this._Admin_Id != value))
				{
					this.OnAdmin_IdChanging(value);
					this.SendPropertyChanging();
					this._Admin_Id = value;
					this.SendPropertyChanged("Admin_Id");
					this.OnAdmin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Id", DbType="Int")]
		public System.Nullable<int> Student_Id
		{
			get
			{
				return this._Student_Id;
			}
			set
			{
				if ((this._Student_Id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IdChanging(value);
					this.SendPropertyChanging();
					this._Student_Id = value;
					this.SendPropertyChanged("Student_Id");
					this.OnStudent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Psychologist_Admin", Storage="_Admins", ThisKey="Psychologist_Id", OtherKey="Psychologist_Id")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Psychologist", Storage="_Student", ThisKey="Student_Id", OtherKey="Student_Id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Psychologists.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Psychologists.Add(this);
						this._Student_Id = value.Student_Id;
					}
					else
					{
						this._Student_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Psychologist = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Psychologist = null;
		}
	}
}
#pragma warning restore 1591
